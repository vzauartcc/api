const periodUnitName = 'quarter';
const periodsInYear = 4;
const periodLength = 12 / periodsInYear;

function getPeriodStartFromDate(date: Date = new Date()): Date {
	const year = date.getUTCFullYear();
	const month = date.getUTCMonth();

	const periodIndex = Math.floor(month / periodLength);
	const startMonth = periodIndex * periodLength;

	return new Date(Date.UTC(year, startMonth, 1));
}

function getPeriodEndFromDate(date: Date = new Date()): Date {
	return new Date(
		getPeriodStartFromDate(date).setUTCMonth(
			getPeriodStartFromDate(date).getUTCMonth() + periodLength,
			1,
		),
	);
}

function getPeriodStartFromPeriod(period: number, year = new Date().getUTCFullYear()): Date {
	return getPeriodStartFromDate(new Date(year, period * periodLength - periodLength, 1));
}

function getPeriodEndFromPeriod(period: number, year = new Date().getUTCFullYear()): Date {
	const endUnit = new Date(year, period * periodLength, 0);
	return getPeriodEndFromDate(new Date(year, endUnit.getUTCMonth(), endUnit.getDate()));
}

function getPeriodFromDate(date: Date = new Date()): number {
	return Math.ceil((1 + date.getUTCMonth()) / periodLength);
}

const activity = {
	period: {
		unit: periodUnitName,
		periodsInYear,
		periodLength,
		startOfCurrent: getPeriodStartFromDate(),
		endOfCurrent: getPeriodEndFromDate(),
		periodStartFromDate: function (date: Date = new Date()) {
			return getPeriodStartFromDate(date);
		},
		periodEndFromDate: (date: Date = new Date()) => {
			return getPeriodEndFromDate(date);
		},
		periodStartFromPeriod: function (period: number, year = new Date().getUTCFullYear()) {
			return getPeriodStartFromPeriod(period, year);
		},
		periodEndFromPeriod: function (period: number, year = new Date().getUTCFullYear()) {
			return getPeriodEndFromPeriod(period, year);
		},
		periodFromDate: function (date: Date = new Date()) {
			return getPeriodFromDate(date);
		},
	},
	requirements: {
		unit: 'hours',
		observer: {
			hours: 2,
			minutes: 2 * 60,
			seconds: 2 * 60 * 60,
			milliseconds: 2 * 60 * 60 * 1000,
			trainingSessions: 2,
		},
		controller: {
			hours: 3,
			minutes: 3 * 60,
			seconds: 3 * 60 * 60,
			milliseconds: 3 * 60 * 60 * 1000,
			trainingSessions: 0,
		},
	},
};

export default {
	activity,
	atcPos: [
		'ARR',
		'AZO',
		'BTL',
		'CID',
		'CMI',
		'DBQ',
		'DEC',
		'DPA',
		'EKM',
		'ENW',
		'FWA',
		'GRR',
		'GUS',
		'GYY',
		'JVL',
		'LAF',
		'LOT',
		'MDW',
		'MKE',
		'MKG',
		'MLI',
		'MSN',
		'MWC',
		'ORD',
		'OSH',
		'PWK',
		'RAC',
		'RFD',
		'SBN',
		'UES',
		'UGN',
		'VOK',
	],
	airports: [
		'05C',
		'08C',
		'0WI4',
		'13C',
		'26WN',
		'2IL9',
		'2WN5',
		'31WN',
		'35D',
		'39WI',
		'3GM',
		'3HO',
		'44C',
		'4C8',
		'4K6',
		'50I',
		'57C',
		'61C',
		'63C',
		'67WI',
		'6D6',
		'82C',
		'88C',
		'8D1',
		'8D4',
		'8DA',
		'8WI0',
		'91C',
		'93C',
		'9D9',
		'9WN1',
		'C04',
		'C20',
		'C25',
		'C27',
		'C47',
		'C56',
		'C56',
		'C62',
		'C65',
		'C73',
		'C75',
		'C89',
		'C91',
		'KANQ',
		'KARR',
		'KASW',
		'KAWG',
		'KAZO',
		'KBIV',
		'KBRL',
		'KBTL',
		'KCID',
		'KCMI',
		'KCWI',
		'KDAF',
		'KDBQ',
		'KDEC',
		'KDLL',
		'KDNV',
		'KDPA',
		'KDVN',
		'KEKM',
		'KETB',
		'KEZI',
		'KFEP',
		'KFFL',
		'KFFX',
		'KFLD',
		'KFSW',
		'KFWA',
		'KGBG',
		'KGGI',
		'KGRR',
		'KGSH',
		'KGUS',
		'KGWB',
		'KGYY',
		'KHAI',
		'KHHG',
		'KHXF',
		'KIFA',
		'KIGQ',
		'KIIB',
		'KIKK',
		'KIRS',
		'KIWH',
		'KJOT',
		'KJVL',
		'KLAF',
		'KLNR',
		'KLOT',
		'KMCX',
		'KMDW',
		'KMGC',
		'KMIW',
		'KMKE',
		'KMKG',
		'KMLI',
		'KMSN',
		'KMUT',
		'KMWC',
		'KMZZ',
		'KOEB',
		'KOKK',
		'KOLZ',
		'KOOA',
		'KOQW',
		'KORD',
		'KOSH',
		'KOTM',
		'KOVS',
		'KOXI',
		'KPDC',
		'KPNT',
		'KPPO',
		'KPWK',
		'KRAC',
		'KRCR',
		'KRFD',
		'KRPJ',
		'KRWN',
		'KRYV',
		'KRZL',
		'KSBM',
		'KSBN',
		'KSFY',
		'KSQI',
		'KTIP',
		'KTVK',
		'KTZT',
		'KUES',
		'KUGN',
		'KUNU',
		'KVOK',
		'KVPZ',
		'KVTI',
		'KVYS',
		'WI55',
		'WI67',
		'WS46',
		'WS51',
		'Y50',
		'Y70',
		'Y72',
		'Z98',
	],
	ratingsShort: [
		'Unknown',
		'OBS',
		'S1',
		'S2',
		'S3',
		'C1',
		'C2',
		'C3',
		'I1',
		'I2',
		'I3',
		'SUP',
		'ADM',
	],
	ratingsLong: [
		'Unknown',
		'Observer',
		'Student',
		'Student 2',
		'Senior Student',
		'Controller',
		'Controller 2',
		'Senior Controller',
		'Instructor',
		'Instructor 2',
		'Senior Instructor',
		'Supervisor',
		'Administrator',
	],
};
